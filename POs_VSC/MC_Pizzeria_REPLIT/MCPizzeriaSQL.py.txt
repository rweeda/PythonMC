# Vul hier de naam van je programma in:
# MCPizzeria
#
# Vul hier jullie namen in:
# Renske
#
#

### --------- Bibliotheken en globale variabelen -----------------
import sqlite3
with sqlite3.connect("MCPizzeria.db") as db:
    #cursor is object waarmee je data uit de database kan halen
    cursor = db.cursor()




### ---------  Functie definities  -----------------

def maakTabellenAan():
    # Maak een nieuwe tabel met 3 kolommen: id, naam, prijs
    cursor.execute("""
        CREATE TABLE IF NOT EXISTS tbl_pizzas(
            gerechtID INTEGER PRIMARY KEY AUTOINCREMENT,
            gerechtNaam TEXT NOT NULL,
            gerechtPrijs REAL NOT NULL);""")
    print("Tabel 'tbl_pizzas' aangemaakt.")


    cursor.execute("""
        CREATE TABLE IF NOT EXISTS tbl_klanten(
        klantNr INTEGER PRIMARY KEY AUTOINCREMENT,
        klantAchternaam TEXT);""")
    print("Tabel 'tbl_klanten' aangemaakt.")


    cursor.execute("""
        CREATE TABLE IF NOT EXISTS tbl_winkelWagen(
        bestelRegel INTEGER PRIMARY KEY AUTOINCREMENT,
        klantNr INTEGER,
        gerechtID INTEGER,
        aantal INTEGER NOT NULL,
        FOREIGN KEY (klantNr) REFERENCES tbl_klanten(klantNr)
        FOREIGN KEY (gerechtID) REFERENCES tbl_pizzas(gerechtID)
        );""")
    print("Tabel 'tbl_winkelWagen' aangemaakt.")

    #db.commit() # update de database

def verwijderTabellen():
  cursor.execute("DROP TABLE IF EXISTS tbl_pizzas")
  cursor.execute("DROP TABLE IF EXISTS tbl_klanten")
  cursor.execute("DROP TABLE IF EXISTS tbl_winkelWagen")
  print("Tabellen verwijderd")
	
def printAlleTabellen():
	printTabel("tbl_pizzas")
	printTabel("tbl_klanten")
	printTabel("tbl_winkelWagen")

def printTabel(tabel_naam):
    cursor.execute("SELECT * FROM " + tabel_naam) #SQL om ALLE gegevens te halen
    opgehaalde_gegevens = cursor.fetchall() #sla gegevens op in een variabele
    print("Tabel " + tabel_naam + ":", opgehaalde_gegevens) #druk gegevens af


# Alleen klant toevoegen als die nog niet bestaat
# def voegKlantToe(naam_nieuwe_klant):
#   cursor.execute("SELECT * FROM tbl_klanten WHERE klantAchternaam = ?", ( naam_nieuwe_klant, ) )
#   zoek_resultaat = cursor.fetchall()
#   if zoek_resultaat == []: #resultaat is leeg, geen gerecht gevonden
#     cursor.execute("INSERT INTO tbl_klanten VALUES(NULL, ?)", (naam_nieuwe_klant,))
#     print("Klant toegevoegd:")
#     printTabel("tbl_klanten")
#   else:
#     print("Klant bestaat al")
#   #db.commit() #NEW: gegevens naar de database wegschrijven


def voegKlantToe(naam_nieuwe_klant):
  cursor.execute("INSERT INTO tbl_klanten VALUES(NULL, ?)", (naam_nieuwe_klant,))
  print("Klant toegevoegd:")
  printTabel("tbl_klanten")

  #db.commit() #NEW: gegevens naar de database wegschrijven

def voegPizzaToe(naam_nieuwe_pizza, prijs_nieuwe_pizza):
  cursor.execute("INSERT INTO tbl_pizzas VALUES(NULL, ?, ? )", (naam_nieuwe_pizza, prijs_nieuwe_pizza))
  print("Pizzas toegevoegd:")
  printTabel("tbl_pizzas")
  #db.commit() #NEW: gegevens naar de database wegschrijven


def verwijderPizza(gerecht):
  cursor.execute("DELETE FROM tbl_pizzas WHERE gerechtNaam = ?", (gerecht,))

  print("Gerecht verwijderd")
  printTabel("tbl_pizzas")

def pasGerechtAan(gerechtID, nieuweGerechtNaam, nieuwePrijs):
  cursor.execute("UPDATE tbl_pizzas SET gerechtNaam = ?, gerechtPrijs = ? WHERE gerechtID = ?", (nieuweGerechtNaam, nieuwePrijs, gerechtID ))

  print("Gerecht aangepast")
  printTabel("tbl_pizzas")


#Zoek alle gegevens over klant met ingevoerde naam
def zoekKlantInTabel(ingevoerde_klantnaam):
    cursor.execute("SELECT * FROM tbl_klanten WHERE klantAchternaam = ?", (ingevoerde_klantnaam,))
    zoek_resultaat = cursor.fetchall()

    if zoek_resultaat == []: #resultaat is leeg, geen gerecht gevonden
        print("Geen klant gevonden met achternaam", ingevoerde_klantnaam)
        print("Klant wordt nu toegevoegd.")
        cursor.execute("INSERT INTO tbl_klanten VALUES(NULL, ? )", (ingevoerde_klantnaam, ))
        db.commit() #gegevens naar de database wegschrijven

        print("Klant toegevoegd aan 'tbl_klanten':" + ingevoerde_klantnaam  )
        printTabel("tbl_klanten")

        #nu dat klant in tabel is gezet, kunnen we zijn gegevens ophalen
        cursor.execute("SELECT * FROM tbl_klanten WHERE klantAchternaam = ?",(ingevoerde_klantnaam,))
        zoek_resultaat = cursor.fetchall()

    return zoek_resultaat


def vraagOpGegevensPizzaTabel():
    cursor.execute("SELECT * FROM tbl_pizzas")
    resultaat = cursor.fetchall()
    print("Tabel tbl_pizzas:", resultaat)
    return resultaat

#Zoek alle gegevens over pizza met ingevoerde naam
def zoekPizza(ingevoerde_pizzanaam):
    cursor.execute("SELECT * FROM tbl_pizzas WHERE gerechtNaam = ?", ( ingevoerde_pizzanaam, ) )
    zoek_resultaat = cursor.fetchall()
    if zoek_resultaat == []: #resultaat is leeg, geen gerecht gevonden
        print("Helaas, geen match gevonden met "+ ingevoerde_pizzanaam)
    else:
        print("Pizza gevonden: ", zoek_resultaat )
    return zoek_resultaat

def voegToeAanWinkelWagen(klantNr, gerechtID, aantal):
    cursor.execute("INSERT INTO tbl_winkelWagen VALUES(NULL, ?, ?, ?)", (klantNr, gerechtID, aantal,))
    db.commit() #gegevens naar de database wegschrijven
    print("Bestelling toegevoegd aan winkelwagen:")
    printTabel("tbl_winkelWagen")


def vraagOpGegevensWinkelWagenTabel():
    cursor.execute("SELECT * FROM tbl_winkelWagen")
    resultaat = cursor.fetchall()
    print("Tabel tbl_winkelWagen:", resultaat)
    return resultaat


### --------- Hoofdprogramma  ----------------
#EENMALIG AANROEPEN BIJ HET EERSTE KEER OPSTARTEN
#verwijderTabellen()
maakTabellenAan()

#Voeg klanten toe aan tabel:
voegKlantToe("Janssen")
voegKlantToe("Smit")
#Voeg pizza's toe aan tabel:
voegPizzaToe("Margarita", 9.50)
voegPizzaToe("Hawaii", 12.25)
voegPizzaToe("Salami", 10.00)

#OM MEE TE OEFENEN
#verwijderPizza("Hawaii")
#pasGerechtAan(3, "Salamiiii", 19.25)

#printAlleTabellen()


