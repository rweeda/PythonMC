<!--<p>H7: Afsluitende opdrachten</p>

<h1 id="H7AfOpgaven">H7 - While : Afsluitende Opgaven</h1>
-->
<p>Met de volgende afsluitende opdrachten kun je kijken hoe goed je de stof beheerst. Controleer steeds je eigen oplossing met de voorbeelduitwerking.</p>


<p class="opdracht" id="AfOpgave71">Afsluitende opdracht 7.1 Rekenspel</p>


<table>
    <tbody>
        <tr>
            <td>
                <img src="http://course.cs.ru.nl/pythonVO/Jupyter/img/Python7_Stroomdiagram_rekenSpel.jpg" alt="Stroomdiagram voor herhalen met invoer" width="550"><br>
            </td>
            <td>
                <p>We maken een rekenspel:</p>
                <ol>
                    <li>Het programma verzint een rekensommetje met twee willekeurige getallen.
                    </li>
                    <li>De speler moet het antwoord uitrekenen en invullen.
                    </li>
                    <li>Jouw programma controleert het antwoord.
                    </li>
                    <li>Bij een juist antwoord krijgt de speler een nieuwe som. Ga terug naar stap 1.
                    </li>
                    <li>Heeft de speler het fout, dan is de speler af. Geef het juiste antwoord.
                    </li>
                    <li>Na afloop van het spel print je "Bedankt voor het spelen"
                    </li>
                </ol>
                <p>Schrijf de code voor dit spel.</p>
                <p>Tip: voor een willekeurig getal tussen 0 en 10 gebruik je <code>random.randint(0,10)</code>. Boven aan je code zet je eerst <code>import random</code>.</p>
            </td>
        </tr>
    </tbody>
</table>



<!-- Python7_Stroomdiagram_rekenSpel-->
<p><iframe width="100%" height="1000px" src="https://repl.it/team/InformaticaActief/Af71-Rekenspel"></iframe></p>
<!--[Voorbeeld uitwerking](http://course.cs.ru.nl/pythonVO/Jupyter/H7_oplossingen.html#AfOpgave71)-->
<p>Bekijk <a href="https://course.cs.ru.nl/pythonVO/Teams/IA_uitwerkingen/IA_H7_oplossingen.html#AfOpgave71" target="_blank">hier</a> de voorbeelduitwerking.</p>

<!-- ANTWOORD

<pre class="python">
import random

spel_afgelopen = False #om te beginnen is spel nog niet afgelopen

while not spel_afgelopen: #zolang spel nog niet is afgelopen, herhaal dan:
    #bepaal willekeurige getallen
    getal1 = random.randint(0,10)
    getal2 = random.randint(0,10)

    #vraag gebruiker om antwoord en sla op als int
    print("Hoeveel is " + str(getal1) + " + " + str(getal2) + "?")
    invoer = input()
    antwoord = int( invoer )

    #controleer of antwoord correct is
    if antwoord == (getal1 + getal2):
        print("Goed zo! Je krijgt nog een som.")
    else: #antwoord fout, spel afgelopen

        print("Jammer, je bent af.")
        print("Het antwoord was: "+ str(getal1) + " + " + str(getal2) + " = " + str(getal1 + getal2) )
		spel_afgelopen = True #pas vlag aan, spel is nu afgelopen


print("Bedankt voor het spelen")
</pre>
-->


<p class="opdracht" id="AfOpgave72">Afsluitende opdracht 7.2 Rekenspel met punten</p>

<p>We maken een vergelijkbaar rekenspel als bij Afsluitende opdracht 7.1, maar met een paar aanpassingen:</p>
<ol>
    <li>Geef een keersom.
    </li>
    <li>De speler begint met 100 punten.
    </li>
    <li>Als de speler een juist antwoord geeft, krijgt die 10 punten erbij.
    </li>
    <li>Bij een verkeerd antwoord gaan er 10 punten vanaf.
    </li>
    <li>Als de speler 0 punten heeft, dan is het spel afgelopen.
    </li>
</ol>


<p>Tips:</p>
<ul>
    <li>Pak het stapsgewijs aan en test je werk tussendoor. Begin dus eerst met het spel zoals bij Afsluitende opdracht 7.1 en voeg dan &eacute;&eacute;n voor &eacute;&eacute;n de aanpassingen hierboven toe.
    </li>
    <li>Het controleren op 0 punten doe je aan het einde van de while-loop. Als het aantal punten gelijk aan 0 is, dan pas je de vlag aan.
    </li>
</ul>

<p>Extra uitdaging: vraag de gebruiker of welke sommen hij wil: <code>+</code>, <code>-</code> , <code>*</code> of <code>/</code>.</p>

<p><iframe width="100%" height="1000px" src="https://repl.it/team/InformaticaActief/Af72-Rekenspel-met-punten"></iframe></p>
<!-- [Voorbeeld uitwerking](http://course.cs.ru.nl/pythonVO/Jupyter/H7_oplossingen.html#AfOpgave72)-->
<p>Bekijk <a href="https://course.cs.ru.nl/pythonVO/Teams/IA_uitwerkingen/IA_H7_oplossingen.html#AfOpgave72" target="_blank">hier</a> de voorbeelduitwerking.</p>

<!--ANTWOORD
import random

punten = 100
spel_afgelopen = False #om te beginnen is spel nog niet afgelopen

while not spel_afgelopen: #zolang spel nog niet is afgelopen, herhaal dan:
    #bepaal willekeurige getallen
    getal1 = random.randint(0,10)
    getal2 = random.randint(0,10)

    #vraag gebruiker om antwoord en sla op als int
    print("Hoeveel is " + str(getal1) + " * " + str(getal2) + "?")
    invoer = input()
    antwoord = int( invoer )

    #controleer of antwoord correct is
    if antwoord == (getal1 * getal2):
        print("Goed zo! Je krijgt een neiuwe vraag.")
        punten += 10 #antwoord goed, 10 punten er bij
    else: #antwoord fout, spel afgelopen
        print("Jammer, fout")
        print("Het antwoord was: "+ str(getal1) + " * " + str(getal2) + " = " + str(getal1 + getal2) )
        punten -= 10 #antwoord goed, 10 punten er bij

    if punten == 0:
        spel_afgelopen = True #pas vlag aan, spel is nu afgelopen

print("Bedankt voor het spelen!" )

-->








<p class="opdracht" id="AfOpgave76">Afsluitende opdracht 7.3 Krimpende spirograaf</p>
<table>
    <tbody>
        <tr>
            <td>
                <img src="http://course.cs.ru.nl/pythonVO/Jupyter/img/Python7_krimpendeSpirograaf.jpg" alt="Krimpende spirograaf" width="300"><br>
            </td>
            <td>

                <p>Deze spirograaf is gemaakt door meerdere vierkanten te tekenen. Elk vierkant is net iets kleiner dan het vorige. Na elk vierkant worden er steeds 15 graden gedraaid. Je stopt met tekenen als de lengte kleiner dan 10 wordt.</p>

                <p>Schrijf een programma dat zo'n spirograaf tekent.</p>
                <ol>
                    <li>Schrijf een functie die de gebruiker om de zijlengte van het eerste vierkant vraagt (tussen de 50 en 400). Deze lengte lever je op met een return.
                    </li>
                    <li>Sla de opgeleverde lengte op in een variabele. Doe dit in je hoofdprogramma, nog voor de code van de <code>while</code>-loop.
                    </li>
                    <li>Teken een vierkant met de gegeven <code>lengte</code>.
                    </li>
                    <li>Herhaal (met een while-loop) totdat de lengte kleiner dan 10 is:
                        <ul>
                            <li>teken vierkant
                            </li>
                            <li>draai 15 graden
                            </li>
                            <li>maak lengte 10 korter
                            </li>
                        </ul>
                    </li>
                    <li>Gebruik hierbij de onderstaande code.
                    </li>
                </ol>

            </td>
        </tr>
    </tbody>
</table><br>

<!-- CODE KADO
import turtle

### FUNCTIEDEFINITIE

#tekent een vierkant met de gegeven lengte
def tekenVierkant( lengte ):
	turtle.forward( lengte )
	turtle.right( 90 )
	turtle.forward( lengte )
	turtle.right( 90 )
	turtle.forward( lengte )
	turtle.right( 90 )
	turtle.forward( lengte )
	turtle.right( 90 )


#SCHRIJF HIER EEN DEF OM DE GEBRUIKER OM EEN LENGTE TE VRAGEN


### HOOFDPROGRAMMA
turtle.pendown()


tekenVierkant( lengte )
turtle.done()
-->

<p><iframe width="100%" height="1000px" src="https://repl.it/team/InformaticaActief/H7Af73-Krimpende-spirograafpy3"></iframe></p>
<!--[Voorbeeld uitwerking](http://course.cs.ru.nl/pythonVO/Jupyter/H7_oplossingen.html#AfOpgave73)-->
<p>Bekijk <a href="https://course.cs.ru.nl/pythonVO/Teams/IA_uitwerkingen/IA_H7_oplossingen.html#AfOpgave73" target="_blank">hier</a> de voorbeelduitwerking.</p>

<!-- ANTWOORD:
<pre class="python">
import turtle

### FUNCTIEDEFINITIE

#tekent een vierkant door 4 keer vooruit de gegeven lengte vooruit te lopen en 90 graden te draaien.
def tekenVierkant( lengte ):
	turtle.forward( lengte )
	turtle.right( 90 )
	turtle.forward( lengte )
	turtle.right( 90 )
	turtle.forward( lengte )
	turtle.right( 90 )
	turtle.forward( lengte )
	turtle.right( 90 )



def vraagGebruikerOmLengte():
    print("Geef een getal tussen de 50 en 200:")
    invoer = input()
    lengte = int (invoer)
    print( "Het eerste vierkant wordt", lengte, "groot.")
    return lengte

### HOOFDPROGRAMMA

turtle.pendown()
lengte = vraagGebruikerOmLengte()
while lengte > 10:
    tekenVierkant( lengte )
    turtle.right(15)
    lengte -= 10
turtle.done()
</pre>
-->

<p class="opdracht" id="AfOpgave77">Afsluitende opdracht 7.4 Som berekenen</p>
<p>Schrijf een programma dat de som van een aantal getallen berekent. De gebruiker geeft getallen een voor een in en geeft aan dat hij klaar is door een 'X' in te voeren.</p>

<p><iframe width="100%" height="800px" src="https://repl.it/team/InformaticaActief/Af74-Som-berekenen"></iframe></p>
<!--[Voorbeeld uitwerking](http://course.cs.ru.nl/pythonVO/Jupyter/H7_oplossingen.html#AfOpgave74)-->
<p>Bekijk <a href="https://course.cs.ru.nl/pythonVO/Teams/IA_uitwerkingen/IA_H7_oplossingen.html#AfOpgave74" target="_blank">hier</a> de voorbeelduitwerking.</p>
<!-- ANTWOORD
<pre class="python">
totaal = 0
klaar = False

while not klaar:                            #zolang nier klaar, herhaal dan
    print("Geef een getal (of 'X' op te stoppen): ")
    invoer = input(  )                      #vraag gebruiker om invoer

    if invoer == 'X':
        klaar = True
    else:
        aantal_getallen_ingevoerd += 1
        ingevoerde_getal = int( invoer )    #zet de invoer om in een getal
        print("Je hebt ingevoerd", ingevoerde_getal )
        totaal += ingevoerde_getal          #tel ingevoerde getal op bij het totaal

print( "Totaal is", totaal )                #druk aan einde het totaal af

</pre>
-->


<p class="opdracht" id="AfOpgave75">Afsluitende opdracht 7.5 Gemiddelde berekenen</p>
<p>Schrijf een programma dat het gemiddelde van een aantal getallen berekent. De gebruiker geeft getallen een voor een in en geeft aan dat hij klaar is door een 'X' in te voeren.</p>


<p>Tip: Om het gemiddelde uit te rekenen moet je bijhouden hoeveel getallen zijn ingevoerd en wat de som daarvan is.</p>

<p><iframe width="100%" height="600px" src="https://repl.it/team/InformaticaActief/Af75-Gemiddelde-berekenen"></iframe></p>
<!--[Voorbeeld uitwerking](http://course.cs.ru.nl/pythonVO/Jupyter/H7_oplossingen.html#AfOpgave75)-->
<p>Bekijk <a href="https://course.cs.ru.nl/pythonVO/Teams/IA_uitwerkingen/IA_H7_oplossingen.html#AfOpgave75" target="_blank">hier</a> de voorbeelduitwerking.</p>
<!-- ANTWOORD
<pre class="python">
totaal = 0
aantal_getallen_ingevoerd = 0
klaar = False

while not klaar:                            #zolang nier klaar, herhaal dan
    print("Geef een getal (of 'X' op te stoppen): ")
    invoer = input(  )                      #vraag gebruiker om invoer

    if invoer == 'X':
        klaar = True
    else:
        aantal_getallen_ingevoerd += 1
        ingevoerde_getal = int( invoer )    #zet de invoer om in een getal
        print("Je hebt ingevoerd", ingevoerde_getal )
        totaal += ingevoerde_getal          #tel ingevoerde getal op bij het totaal

print( "Totaal is", totaal )                #druk aan einde het totaal af
gemiddelde = totaal/aantal_getallen_ingevoerd
print( "Het gemiddelde is", gemiddelde)
</pre>
-->